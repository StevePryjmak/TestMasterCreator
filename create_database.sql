-- Generated by Oracle SQL Developer Data Modeler 24.3.0.240.1210
--   at:        2024-12-02 23:21:13 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE ANSWERS (
    ANSWERID INTEGER NOT NULL,
    TEXT VARCHAR2(80 CHAR) NOT NULL
);

ALTER TABLE ANSWERS
    ADD CONSTRAINT ANSWERS_PK PRIMARY KEY (
        ANSWERID
    );

CREATE TABLE HINTS (
    HINTID INTEGER NOT NULL,
    TEXT VARCHAR2(50 CHAR) NOT NULL
);

ALTER TABLE HINTS
    ADD CONSTRAINT HINTS_PK PRIMARY KEY (
        HINTID
    );

CREATE TABLE LIKES (
    LIKEID INTEGER NOT NULL,
    NAME VARCHAR2(20 CHAR) NOT NULL,
    USERS_USERID INTEGER NOT NULL,
    TESTS_TESTID INTEGER NOT NULL,
    "Date" DATE NOT NULL
);

ALTER TABLE LIKES
    ADD CONSTRAINT GROUPS_PK PRIMARY KEY (
        LIKEID
    );

CREATE TABLE QUESTION_ANSWER (
    QAID INTEGER NOT NULL,
    ANSWERS_ANSWERID INTEGER NOT NULL,
    QUESTIONS_QUESTIONID INTEGER NOT NULL,
    ISCORRECT CHAR(1) NOT NULL
);

ALTER TABLE QUESTION_ANSWER
    ADD CONSTRAINT QUESTION_ANSWERV1_PK PRIMARY KEY (
        QAID
    );

CREATE TABLE QUESTIONS (
    QUESTIONID INTEGER NOT NULL,
    TEXT VARCHAR2(50 CHAR) NOT NULL,
    HINTS_HINTID INTEGER,
    TYPES_TYPEID INTEGER NOT NULL
);

ALTER TABLE QUESTIONS
    ADD CONSTRAINT QUESTIONS_PK PRIMARY KEY (
        QUESTIONID
    );

CREATE TABLE RESULTS (
    RESULTID INTEGER NOT NULL,
    POINTS INTEGER NOT NULL,
    RESULTDATE DATE NOT NULL,
    USERS_USERID INTEGER NOT NULL,
    TESTS_TESTID INTEGER NOT NULL
);

ALTER TABLE RESULTS
    ADD CONSTRAINT RESULTS_PK PRIMARY KEY (
        RESULTID
    );

CREATE TABLE TAGS (
    TAGID INTEGER NOT NULL,
    NAME VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE TAGS
    ADD CONSTRAINT TAGS_PK PRIMARY KEY (
        TAGID
    );

CREATE TABLE TEST_QUESTION (
    TQID INTEGER NOT NULL,
    QUESTIONORDER INTEGER NOT NULL,
    QUESTIONS_QUESTIONID INTEGER NOT NULL,
    TESTS_TESTID INTEGER NOT NULL
);

ALTER TABLE TEST_QUESTION
    ADD CONSTRAINT TEST_QUESTIONV1_PK PRIMARY KEY (
        TQID
    );

CREATE TABLE TEST_TAG (
    TESTS_TESTID INTEGER NOT NULL,
    TAGS_TAGID INTEGER NOT NULL
);

ALTER TABLE TEST_TAG
    ADD CONSTRAINT RELATION_10_PK PRIMARY KEY (
        TESTS_TESTID,
        TAGS_TAGID
    );

CREATE TABLE TESTS (
    TESTID INTEGER NOT NULL,
    NAME VARCHAR2(20 CHAR) NOT NULL,
    USERS_USERID INTEGER NOT NULL,
    DESCRIPTION VARCHAR2(180 CHAR) NOT NULL,
    CREATIONDATE DATE NOT NULL,
    FIELD VARCHAR2(30 CHAR) NOT NULL
);

ALTER TABLE TESTS
    ADD CONSTRAINT TESTS_PK PRIMARY KEY (
        TESTID
    );

CREATE TABLE TYPES (
    TYPEID INTEGER NOT NULL,
    DESCRIPTION VARCHAR2(50 CHAR) NOT NULL
);

ALTER TABLE TYPES
    ADD CONSTRAINT TYPES_PK PRIMARY KEY (
        TYPEID
    );

CREATE TABLE USERS (
    USERID INTEGER NOT NULL,
    LOGIN VARCHAR2(20 CHAR) NOT NULL,
    PASSWORD VARCHAR2(64 BYTE) NOT NULL,
    EMAIL VARCHAR2(30 CHAR) NOT NULL
);

ALTER TABLE USERS
    ADD CONSTRAINT USERS_PK PRIMARY KEY (
        USERID
    );

ALTER TABLE LIKES
    ADD CONSTRAINT LIKES_TESTS_FK FOREIGN KEY (
        TESTS_TESTID
    )
        REFERENCES TESTS (
            TESTID
        );

ALTER TABLE LIKES
    ADD CONSTRAINT LIKES_USERS_FK FOREIGN KEY (
        USERS_USERID
    )
        REFERENCES USERS (
            USERID
        );

ALTER TABLE QUESTION_ANSWER
    ADD CONSTRAINT QUESTION_ANSWER_ANSWERS_FK FOREIGN KEY (
        ANSWERS_ANSWERID
    )
        REFERENCES ANSWERS (
            ANSWERID
        );

ALTER TABLE QUESTION_ANSWER
    ADD CONSTRAINT QUESTION_ANSWER_QUESTIONS_FK FOREIGN KEY (
        QUESTIONS_QUESTIONID
    )
        REFERENCES QUESTIONS (
            QUESTIONID
        );

ALTER TABLE QUESTIONS
    ADD CONSTRAINT QUESTIONS_HINTS_FK FOREIGN KEY (
        HINTS_HINTID
    )
        REFERENCES HINTS (
            HINTID
        );

ALTER TABLE QUESTIONS
    ADD CONSTRAINT QUESTIONS_TYPES_FK FOREIGN KEY (
        TYPES_TYPEID
    )
        REFERENCES TYPES (
            TYPEID
        );

ALTER TABLE TEST_TAG
    ADD CONSTRAINT RELATION_10_TAGS_FK FOREIGN KEY (
        TAGS_TAGID
    )
        REFERENCES TAGS (
            TAGID
        );

ALTER TABLE TEST_TAG
    ADD CONSTRAINT RELATION_10_TESTS_FK FOREIGN KEY (
        TESTS_TESTID
    )
        REFERENCES TESTS (
            TESTID
        );

ALTER TABLE RESULTS
    ADD CONSTRAINT RESULTS_TESTS_FK FOREIGN KEY (
        TESTS_TESTID
    )
        REFERENCES TESTS (
            TESTID
        );

ALTER TABLE RESULTS
    ADD CONSTRAINT RESULTS_USERS_FK FOREIGN KEY (
        USERS_USERID
    )
        REFERENCES USERS (
            USERID
        );

ALTER TABLE TEST_QUESTION
    ADD CONSTRAINT TEST_QUESTION_QUESTIONS_FK FOREIGN KEY (
        QUESTIONS_QUESTIONID
    )
        REFERENCES QUESTIONS (
            QUESTIONID
        );

ALTER TABLE TEST_QUESTION
    ADD CONSTRAINT TEST_QUESTION_TESTS_FK FOREIGN KEY (
        TESTS_TESTID
    )
        REFERENCES TESTS (
            TESTID
        );

ALTER TABLE TESTS
    ADD CONSTRAINT TESTS_USERS_FK FOREIGN KEY (
        USERS_USERID
    )
        REFERENCES USERS (
            USERID
        );

CREATE SEQUENCE ANSWERS_ANSWERID_SEQ START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER ANSWERS_ANSWERID_TRG BEFORE
    INSERT ON ANSWERS FOR EACH ROW WHEN ( NEW.ANSWERID IS NULL )
BEGIN
    :NEW.ANSWERID := ANSWERS_ANSWERID_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE HINTS_HINTID_SEQ START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER HINTS_HINTID_TRG BEFORE
    INSERT ON HINTS FOR EACH ROW WHEN ( NEW.HINTID IS NULL )
BEGIN
    :NEW.HINTID := HINTS_HINTID_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE LIKES_LIKEID_SEQ START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER LIKES_LIKEID_TRG BEFORE
    INSERT ON LIKES FOR EACH ROW WHEN ( NEW.LIKEID IS NULL )
BEGIN
    :NEW.LIKEID := LIKES_LIKEID_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE QUESTION_ANSWER_QAID_SEQ START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER QUESTION_ANSWER_QAID_TRG BEFORE
    INSERT ON QUESTION_ANSWER FOR EACH ROW WHEN ( NEW.QAID IS NULL )
BEGIN
    :NEW.QAID := QUESTION_ANSWER_QAID_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE QUESTIONS_QUESTIONID_SEQ START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER QUESTIONS_QUESTIONID_TRG BEFORE
    INSERT ON QUESTIONS FOR EACH ROW WHEN ( NEW.QUESTIONID IS NULL )
BEGIN
    :NEW.QUESTIONID := QUESTIONS_QUESTIONID_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE RESULTS_RESULTID_SEQ START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER RESULTS_RESULTID_TRG BEFORE
    INSERT ON RESULTS FOR EACH ROW WHEN ( NEW.RESULTID IS NULL )
BEGIN
    :NEW.RESULTID := RESULTS_RESULTID_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE TAGS_TAGID_SEQ START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER TAGS_TAGID_TRG BEFORE
    INSERT ON TAGS FOR EACH ROW WHEN ( NEW.TAGID IS NULL )
BEGIN
    :NEW.TAGID := TAGS_TAGID_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE TEST_QUESTION_TQID_SEQ START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER TEST_QUESTION_TQID_TRG BEFORE
    INSERT ON TEST_QUESTION FOR EACH ROW WHEN ( NEW.TQID IS NULL )
BEGIN
    :NEW.TQID := TEST_QUESTION_TQID_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE TESTS_TESTID_SEQ START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER TESTS_TESTID_TRG BEFORE
    INSERT ON TESTS FOR EACH ROW WHEN ( NEW.TESTID IS NULL )
BEGIN
    :NEW.TESTID := TESTS_TESTID_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE TYPES_TYPEID_SEQ START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER TYPES_TYPEID_TRG BEFORE
    INSERT ON TYPES FOR EACH ROW WHEN ( NEW.TYPEID IS NULL )
BEGIN
    :NEW.TYPEID := TYPES_TYPEID_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE USERS_USERID_SEQ START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER USERS_USERID_TRG BEFORE
    INSERT ON USERS FOR EACH ROW WHEN ( NEW.USERID IS NULL )
BEGIN
    :NEW.USERID := USERS_USERID_SEQ.NEXTVAL;
END;
/

-- Oracle SQL Developer Data Modeler Summary Report:
--
-- CREATE TABLE                            12
-- CREATE INDEX                             0
-- ALTER TABLE                             25
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          11
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         11
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
--
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
--
-- REDACTION POLICY                         0
--
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
--
-- ERRORS                                   0
-- WARNINGS                                 0