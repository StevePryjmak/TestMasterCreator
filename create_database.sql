-- Generated by Oracle SQL Developer Data Modeler 24.3.0.240.1210
--   at:        2024-12-02 20:59:14 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE answers (
    answerid INTEGER NOT NULL,
    text     VARCHAR2(80 CHAR) NOT NULL
);

ALTER TABLE answers ADD CONSTRAINT answers_pk PRIMARY KEY ( answerid );

CREATE TABLE hints (
    hintid INTEGER NOT NULL,
    text   VARCHAR2(50 CHAR) NOT NULL
);

ALTER TABLE hints ADD CONSTRAINT hints_pk PRIMARY KEY ( hintid );

CREATE TABLE likes (
    likeid       INTEGER NOT NULL,
    name         VARCHAR2(20 CHAR) NOT NULL,
    users_userid INTEGER NOT NULL,
    tests_testid INTEGER NOT NULL,
    "Date"       DATE NOT NULL
);

ALTER TABLE likes ADD CONSTRAINT groups_pk PRIMARY KEY ( likeid );

CREATE TABLE question_answer (
    qaid                 INTEGER NOT NULL,
    answers_answerid     INTEGER NOT NULL,
    questions_questionid INTEGER NOT NULL,
    iscorrect            CHAR(1) NOT NULL
);

ALTER TABLE question_answer ADD CONSTRAINT question_answerv1_pk PRIMARY KEY ( qaid );

CREATE TABLE questions (
    questionid   INTEGER NOT NULL,
    text         VARCHAR2(50 CHAR) NOT NULL,
    hints_hintid INTEGER,
    types_typeid INTEGER NOT NULL
);

ALTER TABLE questions ADD CONSTRAINT questions_pk PRIMARY KEY ( questionid );

CREATE TABLE results (
    resultid     INTEGER NOT NULL,
    points       INTEGER NOT NULL,
    "Date"       DATE NOT NULL,
    users_userid INTEGER NOT NULL,
    tests_testid INTEGER NOT NULL
);

ALTER TABLE results ADD CONSTRAINT results_pk PRIMARY KEY ( resultid );

CREATE TABLE tags (
    tagid INTEGER NOT NULL,
    name  VARCHAR2(20 CHAR) NOT NULL
);

ALTER TABLE tags ADD CONSTRAINT tags_pk PRIMARY KEY ( tagid );

CREATE TABLE test_question (
    tqid                 INTEGER NOT NULL,
    questionorder        INTEGER NOT NULL,
    questions_questionid INTEGER NOT NULL,
    tests_testid         INTEGER NOT NULL
);

ALTER TABLE test_question ADD CONSTRAINT test_questionv1_pk PRIMARY KEY ( tqid );

CREATE TABLE test_tag (
    tests_testid INTEGER NOT NULL,
    tags_tagid   INTEGER NOT NULL
);

ALTER TABLE test_tag ADD CONSTRAINT relation_10_pk PRIMARY KEY ( tests_testid,
                                                                 tags_tagid );

CREATE TABLE tests (
    testid       INTEGER NOT NULL,
    name         VARCHAR2(20 CHAR) NOT NULL,
    users_userid INTEGER NOT NULL,
    description  VARCHAR2(180 CHAR) NOT NULL,
    "Date"       DATE NOT NULL,
    field        VARCHAR2(30 CHAR) NOT NULL
);

ALTER TABLE tests ADD CONSTRAINT tests_pk PRIMARY KEY ( testid );

CREATE TABLE types (
    typeid      INTEGER NOT NULL,
    description VARCHAR2(50 CHAR) NOT NULL
);

ALTER TABLE types ADD CONSTRAINT types_pk PRIMARY KEY ( typeid );

CREATE TABLE users (
    userid   INTEGER NOT NULL,
    login    VARCHAR2(20 CHAR) NOT NULL,
    password VARCHAR2(64 BYTE) NOT NULL,
    email    VARCHAR2(30 CHAR) NOT NULL
);

ALTER TABLE users ADD CONSTRAINT users_pk PRIMARY KEY ( userid );

ALTER TABLE likes
    ADD CONSTRAINT likes_tests_fk FOREIGN KEY ( tests_testid )
        REFERENCES tests ( testid );

ALTER TABLE likes
    ADD CONSTRAINT likes_users_fk FOREIGN KEY ( users_userid )
        REFERENCES users ( userid );

ALTER TABLE question_answer
    ADD CONSTRAINT question_answer_answers_fk FOREIGN KEY ( answers_answerid )
        REFERENCES answers ( answerid );

ALTER TABLE question_answer
    ADD CONSTRAINT question_answer_questions_fk FOREIGN KEY ( questions_questionid )
        REFERENCES questions ( questionid );

ALTER TABLE questions
    ADD CONSTRAINT questions_hints_fk FOREIGN KEY ( hints_hintid )
        REFERENCES hints ( hintid );

ALTER TABLE questions
    ADD CONSTRAINT questions_types_fk FOREIGN KEY ( types_typeid )
        REFERENCES types ( typeid );

ALTER TABLE test_tag
    ADD CONSTRAINT relation_10_tags_fk FOREIGN KEY ( tags_tagid )
        REFERENCES tags ( tagid );

ALTER TABLE test_tag
    ADD CONSTRAINT relation_10_tests_fk FOREIGN KEY ( tests_testid )
        REFERENCES tests ( testid );

ALTER TABLE results
    ADD CONSTRAINT results_tests_fk FOREIGN KEY ( tests_testid )
        REFERENCES tests ( testid );

ALTER TABLE results
    ADD CONSTRAINT results_users_fk FOREIGN KEY ( users_userid )
        REFERENCES users ( userid );

ALTER TABLE test_question
    ADD CONSTRAINT test_question_questions_fk FOREIGN KEY ( questions_questionid )
        REFERENCES questions ( questionid );

ALTER TABLE test_question
    ADD CONSTRAINT test_question_tests_fk FOREIGN KEY ( tests_testid )
        REFERENCES tests ( testid );

ALTER TABLE tests
    ADD CONSTRAINT tests_users_fk FOREIGN KEY ( users_userid )
        REFERENCES users ( userid );

CREATE SEQUENCE answers_answerid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER answers_answerid_trg BEFORE
    INSERT ON answers
    FOR EACH ROW
    WHEN ( new.answerid IS NULL )
BEGIN
    :new.answerid := answers_answerid_seq.nextval;
END;
/

CREATE SEQUENCE hints_hintid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER hints_hintid_trg BEFORE
    INSERT ON hints
    FOR EACH ROW
    WHEN ( new.hintid IS NULL )
BEGIN
    :new.hintid := hints_hintid_seq.nextval;
END;
/

CREATE SEQUENCE likes_likeid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER likes_likeid_trg BEFORE
    INSERT ON likes
    FOR EACH ROW
    WHEN ( new.likeid IS NULL )
BEGIN
    :new.likeid := likes_likeid_seq.nextval;
END;
/

CREATE SEQUENCE question_answer_qaid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER question_answer_qaid_trg BEFORE
    INSERT ON question_answer
    FOR EACH ROW
    WHEN ( new.qaid IS NULL )
BEGIN
    :new.qaid := question_answer_qaid_seq.nextval;
END;
/

CREATE SEQUENCE questions_questionid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER questions_questionid_trg BEFORE
    INSERT ON questions
    FOR EACH ROW
    WHEN ( new.questionid IS NULL )
BEGIN
    :new.questionid := questions_questionid_seq.nextval;
END;
/

CREATE SEQUENCE results_resultid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER results_resultid_trg BEFORE
    INSERT ON results
    FOR EACH ROW
    WHEN ( new.resultid IS NULL )
BEGIN
    :new.resultid := results_resultid_seq.nextval;
END;
/

CREATE SEQUENCE tags_tagid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER tags_tagid_trg BEFORE
    INSERT ON tags
    FOR EACH ROW
    WHEN ( new.tagid IS NULL )
BEGIN
    :new.tagid := tags_tagid_seq.nextval;
END;
/

CREATE SEQUENCE test_question_tqid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER test_question_tqid_trg BEFORE
    INSERT ON test_question
    FOR EACH ROW
    WHEN ( new.tqid IS NULL )
BEGIN
    :new.tqid := test_question_tqid_seq.nextval;
END;
/

CREATE SEQUENCE tests_testid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER tests_testid_trg BEFORE
    INSERT ON tests
    FOR EACH ROW
    WHEN ( new.testid IS NULL )
BEGIN
    :new.testid := tests_testid_seq.nextval;
END;
/

CREATE SEQUENCE types_typeid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER types_typeid_trg BEFORE
    INSERT ON types
    FOR EACH ROW
    WHEN ( new.typeid IS NULL )
BEGIN
    :new.typeid := types_typeid_seq.nextval;
END;
/

CREATE SEQUENCE users_userid_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER users_userid_trg BEFORE
    INSERT ON users
    FOR EACH ROW
    WHEN ( new.userid IS NULL )
BEGIN
    :new.userid := users_userid_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            12
-- CREATE INDEX                             0
-- ALTER TABLE                             25
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          11
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         11
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
